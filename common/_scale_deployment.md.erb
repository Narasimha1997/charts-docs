<%
=begin
apps: elasticsearch, external-dns, harbor, metrics-server, mongodb-sharded, redmine, wavefront, airflow, apache, aspnet-core, cassandra, consul, contour, dataplatform-bp1, drupal, ejbca, fluentd, ghost, grafana, grafana-operator, influxdb, joomla, kafka, keycloak, kiam, kibana, kong, kube-prometheus, kubewatch, logstash, mariadb, mariadb-galera, memcached, minio, mongodb, moodle, mxnet, mysql, nats, nginx, nginx-ingress-controller, node, opencart, orangehrm, owncloud, phpbb, postgresql-ha, prestashop, redis, solr, spark, spring-cloud-dataflow, suitecrm, tensorflow-resnet, testlink, thanos, tomcat, wildfly, wordpress, zookeeper, dataplatform-bp2, kube-state-metrics, magento
platforms: kubernetes, tanzu-application-catalog
id: scale_deployment
title: Scale the cluster horizontally
category: administration
weight: 40
highlight: 40
=end %>

To scale the deployment, perform a normal chart upgrade, following the steps below:

* Set the password used at installation time via the *\*.password* chart parameter. For auto-generated passwords, follow the instructions in the post-deployment notes to get the autogenerated password.

<% if %w(elasticsearch external-dns harbor metrics-server mongodb-sharded redmine wavefront).include? current.app %>
* Set the desired number of nodes via the *\*.replicas* chart parameter.
<% elsif %w(airflow apache aspnet-core cassandra consul contour dataplatform-bp1 drupal ejbca fluentd ghost grafana grafana-operator influxdb joomla kafka keycloak kiam kibana kong kube-prometheus kubewatch logstash mariadb mariadb-galera memcached minio mongodb moodle mxnet mysql nats nginx nginx-ingress-controller node opencart orangehrm owncloud phpbb postgresql-ha prestashop redis solr spark spring-cloud-dataflow suitecrm tensorflow-resnet testlink thanos tomcat wildfly wordpress zookeeper).include? current.app %>
* Set the desired number of nodes via the *\*.replicaCount* chart parameter.
<% elsif %w(dataplatform-bp2 kube-state-metrics magento).include? current.app  %>
* Set the desired number of nodes via the *\*.replicaCount* and/or *\*.replicas* chart parameters.
<% end %>

Refer to the FAQ for [more information and examples of scaling a deployment](/<%= platform_path %>/faq/administration/scale-deployment).
