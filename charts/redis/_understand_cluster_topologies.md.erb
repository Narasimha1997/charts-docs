<%
=begin
apps: redis
platforms: kubernetes, tanzu-application-catalog
id: understand_cluster_topologies
title: Understand cluster topologies
category: get-started
weight: 20
highlight: 20
=end %>

### Default: Master-Slave

When installing the chart with *cluster.enabled=true*, it will deploy a Redis master StatefulSet (only one master node allowed) and a Redis slave StatefulSet. The slaves will be read-replicas of the master. Two services will be exposed:

* Redis Master service: Points to the master, where read-write operations can be performed
* Redis Slave service: Points to the slaves, where only read operations are allowed.

In case the master crashes, the slaves will wait until the master node is respawned again by the Kubernetes Controller Manager.

### Master-Slave with Sentinel

When installing the chart with *cluster.enabled=true* and *sentinel.enabled=true*, it will deploy a Redis master StatefulSet (only one master allowed) and a Redis slave StatefulSet. In this case, the pods will contain en extra container with Redis Sentinel. This container will form a cluster of Redis Sentinel nodes, which will promote a new master in case the actual one fails. In addition to this, only one service is exposed:

* Redis service: Exposes port 6379 for Redis read-only operations and port 26379 for accessing Redis Sentinel.

  For read-only operations, access the service using port 6379. For write operations, it's necessary to access the Redis Sentinel cluster and query the current master using the command below (using redis-cli or similar):

  ~~~
  SENTINEL get-master-addr-by-name <name of your MasterSet. Example: mymaster>
  ~~~

This command will return the address of the current master, which can be accessed from inside the cluster.

In case the current master crashes, the Sentinel containers will elect a new master node.
